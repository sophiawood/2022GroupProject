frameRate(60);
var currentScene = 0; //0 = splash screen, 1 = game, 2 = custom
var playerScore = 0;
var aiScore = 0;

//khan button class
var Button = function(config) {
    this.x = config.x || 0;
    this.y = config.y || 0;
    this.width = config.width || 150;
    this.height = config.height || 50;
    this.label = config.label || "Click";
    this.onClick = config.onClick || function() {};
    this.text = config.text || 19;
};

Button.prototype.draw = function() {
    noStroke();
    fill(255, 0, 0);
    rect(this.x, this.y, this.width, this.height,5);
    fill(255, 255, 255);
    textSize(this.text);
    textAlign(LEFT,TOP);
    text(this.label, this.x+10, this.y+this.height/4);
};

Button.prototype.isMouseInside = function() {
    return mouseX > this.x &&
           mouseX < (this.x + this.width) &&
           mouseY > this.y &&
           mouseY < (this.y + this.height);
};

Button.prototype.handleMouseClick = function() {
    if (this.isMouseInside()) {
        this.onClick();
    }
};

//start button
var startBtn = new Button
({
    x: 100,
    y: 500,
    label: "       START",
    onClick: function() {
        currentScene = 1;
    }
});
//go to customization screen
var customBtn = new Button
({
    x: 350,
    y: 500,
    label: "  CUSTOMIZE",
    onClick: function() {
        currentScene = 2;
    }
});

var Paddle = function(x, y, d, color) {
    this.x = x; 
    this.y = y;
    this.d = d;
    this.r = this.d / 2;
    this.color = color; 
};

Paddle.prototype.draw = function() {
    strokeWeight(1);
    stroke(0, 0, 0);
    fill(this.color[0]);
    ellipse(this.x, this.y, this.d, this.d);
    fill(this.color[1]);
    ellipse(this.x, this.y, this.d / 2, this.d / 2);
};

Paddle.prototype.playerMove = function() {
    this.x = mouseX;
    this.y = mouseY;
    if (mouseX < 178) {
        this.x = 178;
    }
    else if (mouseX > 423) {
        this.x = 423;
    }
    if (mouseY < 326) {
        this.y = 326;
    }
    else if (mouseY > 523) {
        this.y = 523;
    }
};


var playerPaddle = new Paddle(300, 450, 50, [color(200, 0, 0), color(250, 0, 0)]);

var AIPaddle = new Paddle(300, 120, 50, [color(0, 0, 0), color(40, 40, 40)]);

var Puck = function(x, y, d, sx, sy) {

    this.x = x;
    this.y = y;
    this.d = d;
    this.r = this.d / 2;
    this.sx = sx;
    this.sy = sy;
};

Puck.prototype.draw = function() {

    strokeWeight(2);
    stroke(0);
    fill(0);
    ellipse(this.x, this.y, this.d, this.d);
    fill(50);
    ellipse(this.x, this.y, this.d / 2, this.d / 2);
};

Puck.prototype.move = function() {

    this.x += this.sx;
    this.y -= this.sy;

    if (this.x < 165) {
        this.sx *= -1;
    }
    if (this.x > 435) {
        this.sx *= -1;
    }
    if (this.x < 265 || this.x > 335) {
        if (this.y < 75) {
            this.sy *= -1;
        }
        if (this.y > 535) {
            this.sy *= -1;
        }
    }
};

Puck.prototype.goal = function() {
    
    if (this.y < 47) {
        playerScore++;
        this.x = 300;
        this.y = 300;

    }
    if (this.y > 553) {
        aiScore++;
        this.x = 300;
        this.y = 300;
    }
};

var puck = new Puck(300, 300, 25, 4, 4);

Paddle.prototype.AIMove = function() {
    
    this.x = puck.x;

    if (this.x < 175) {
        this.x = 175 ;
    }

    if (this.x > 425) {
        this.x = 425 ;
    }
};

Paddle.prototype.collision = function() {
    
    if (this.x  > puck.x - 11 && this.x < puck.x + 11 && this.y - this.r < puck.y + puck.r && this.y + this.r > puck.y - puck.r){
        puck.sy *= -1;
    }
    
    if (puck.y + puck.r > this.y - this.r && puck.y - puck.r < this.y + this.r && ((puck.x + puck.r > this.x - this.r && puck.x + puck.r < this.x - (this.r/2)) || (puck.x - puck.r < this.x + this.r && puck.x - puck.r > this.x + (this.r/2)))) {
        puck.sx = puck.sx * -1;
    }
    
};

var redBtn = new Button
({
    x : 224,
    y : 200,
    label: "         Red",
    onClick : function(){
    playerPaddle.color = [color(255, 0, 0), color(250, 0, 0)];
        
    }




});

var blueBtn = new Button
({
    x : 224,
    y : 253,
    label: "         Blue",
    onClick : function(){
    playerPaddle.color= [color(0, 0, 255), color(0, 0, 255)];
        
    }
});

var greenBtn = new Button
({
    x : 224,
    y : 305,
    label: "         Green",
    onClick : function(){
    playerPaddle.color = [color(7, 184, 7), color(7, 184, 7)];
        
    }
});

var customHomeBtn = new Button ({
    x : 100,
    y : 418,
    label: "Home",
    onClick : function(){
        currentScene = 0;
    }
}); 

// letters
var drawA = function (x,y,h) //A
{
    fill(255, 0, 0);
    triangle(x+(h/90*5),y+(h/90*100),x+(h/90*115),y+(h/90*10),x+(h/90*40),y+(h/90*100)); // left slant
    triangle(x+(h/90*80),y+(h/90*10),x+(h/90*115),y+(h/90*10),x+(h/90*5),y+(h/90*100));// upper left slant
    rect(x+(h/90*90),y+(h/90*50), h/90*30, h/90*50); //right straight edge
    triangle(x+(h/90*120),y+(h/90*52),x+(h/90*120),y+(h/90*12),x+(h/90*90),y+(h/90*51)); // top of right side
    rect(x+(h/90*78),y+(h/90*67),h/90*35,h/90*20); //line through middle
    triangle(x+(h/90*95), y+(h/90*88), x+(h/90*78), y+(h/90*67), x+(h/90*60), y+(h/90*88)); //edge of line through middle 
};

var drawI = function (x,y,h) //I
{
    rect(x+(h/90*130), y+(h/90*10), h/90*30, h/90*90);
};

    var drawR = function (x,y,h) //R
{
    rect(x+(h/90*170), y+(h/90*10), h/90*30, h/90*90);
    strokeWeight(h/90*23);
    stroke(255, 0, 0);
    noFill();
    arc(x+(h/90*201),y+(h/90*42),h/90*50,h/90*40, 270, 455);
    noStroke();
    fill(255, 0, 0);
    triangle(x+ (h/90*250), y+(h/90*100), x+(h/90*220), y+(h/90*65), x+(h/90*220), y+(h/90*100));//outer triangle lower line
    triangle(x+(h/90*175), y+(h/90*45), x+(h/90*220), y+(h/90*66), x+(h/90*220), y+(h/90*100)); // upper triangle lower line
    fill(216, 238, 240);
    rect(x+(h/90*198),y+(h/90*9),h/90*5,h/90*93); // line break
    triangle(x+(h/90*220),y+(h/90*42),x+(h/90*200),y+(h/90*30),x+(h/90*200),y+(h/90*55));//triangle in the middle
};

var drawH = function (x,y,h) //H
{
    fill(255, 0, 0);
    rect(x+(h/90*270), y+(h/90*10), h/90*30, h/90*90); //left line
    rect(x+h/90*314, y+h/90*10, h/90*30, h/90*90); // right line
    rect(x+h/90*305, y+h/90*48, h/90*36, h/90*20); // middle line
};

var drawO = function (x,y,h) //O
{
 rect(x+h/90*355,y+h/90*10,h/90*60,h/90*90);//base
 fill(30, 0, 255);
 rect(x+h/90*373,y+h/90*33,h/90*25,h/90*41);//center
 strokeWeight(5);
 stroke(30, 0, 255);
 line(x+(h/90*421),y+(h/90*1),x+(h/90*353),y+(h/90*103));
 noStroke();
};

var drawC = function (x,y,h)
{
    fill(255, 0, 0);
    rect(x+h/90*426,y+h/90*10,h/90*60,h/90*90);//base
    fill(30, 0, 255);
    rect(x+h/90*455,y+h/90*33,h/90*44,h/90*41);//center
    triangle(x+(h/90*490),y+(h/90*34),x+(h/90*486),y+(h/90*5),x+(h/90*468),y+(h/90*34));//triangle on top
    triangle(x+(h/90*490),y+(h/90*74),x+(h/90*486),y+(h/90*104),x+(h/90*468),y+(h/90*74));//triangle on bottom
    
};

var drawK = function (x,y,h)
{
    fill(255, 0, 0);
    rect(x+h/90*496,y+h/90*10,h/90*60,h/90*90);//base
    triangle(x+(h/90*570),y+(h/90*9),x+(h/90*554),y+(h/90*28),x+(h/90*556),y+(h/90*9));//top angle
    triangle(x+(h/90*570),y+(h/90*100),x+(h/90*554),y+(h/90*81),x+(h/90*554),y+(h/90*100));//bottom angle
    fill(30, 0, 255);
    triangle(x+(h/90*525),y+(h/90*55),x+(h/90*540),y+(h/90*100),x+(h/90*525),y+(h/90*100));//triangle on bottom
    triangle(x+(h/90*525),y+(h/90*9),x+(h/90*540),y+(h/90*9),x+(h/90*525),y+(h/90*55));//triangle on top
    triangle(x+(h/90*525),y+(h/90*55),x+(h/90*557),y+(h/90*25),x+(h/90*557),y+(h/90*85));//triangle center
    rect(x+(h/90*521),y+(h/90*9),h/90*5,h/90*93); // line break
};

var drawE = function (x,y,h)
{
    fill(255, 0, 0);
    rect(x+h/90*579,y+h/90*10,h/90*60,h/90*90);//base
    fill(30, 0, 255);
    rect(x+h/90*609,y+h/90*30,h/90*30,h/90*15);//upper center
    rect(x+h/90*609,y+h/90*63,h/90*30,h/90*15);//lower center
    triangle(x+(h/90*640),y+(h/90*54),x+(h/90*640),y+(h/90*10),x+(h/90*619),y+(h/90*43));//triangle on top
    triangle(x+(h/90*640),y+(h/90*56),x+(h/90*640),y+(h/90*99),x+(h/90*620),y+(h/90*63));//triangle on bottom
    rect(x+(h/90*621),y+(h/90*38),h/90*20,h/90*30); //end of center rect
    rect(x+(h/90*606),y+(h/90*9),h/90*5,h/90*93); // line break
};

var drawY = function (x,y,h)
{
    fill(255, 0, 0);
    triangle(x+(h/90*680),y+(h/90*100),x+(h/90*715),y+(h/90*10),x+(h/90*645),y+(h/90*100)); // right slant
    triangle(x+(h/90*680),y+(h/90*10),x+(h/90*715),y+(h/90*10),x+(h/90*645),y+(h/90*100));// upper right slant
    triangle(x+(h/90*625),y+(h/90*10),x+(h/90*651),y+(h/90*10),x+(h/90*665),y+(h/90*32));// upper left slant
    triangle(x+(h/90*625),y+(h/90*10),x+(h/90*665),y+(h/90*30),x+(h/90*652),y+(h/90*65));// upper left slant
};

var drawAir = function (x,y,h) //AIR
{
    drawA(x,y,h-15);
    drawI(x-4,y,h-15);
    drawR(x-9,y,h-15);
};

var drawHockey = function (x,y,h) //HOCKEY
{
    drawH(x-9,y,h-15);
    drawO(x-14,y,h-15);
    drawC(x-19,y,h-15);
    drawK(x-23,y,h-15);
    drawE(x-26,y,h-15);
    drawY(x-10,y,h-15);
};

var drawAirHockey = function (x,y,h) // AIR HOCKEY
{
    drawAir(x,y,h);
    drawHockey(x,y,h);
};

var splashScreen = function ()
{
    background(30, 0, 255);
    fill(232, 248, 255);
    rect(0,470,600,131);
    fill(255, 0, 0);
    textSize(45);
    textSize(25);
    text ("by Max, Rami, and Sophia", 165,95);
    text("theres gonna be a hockey player", 15, 260);
    text("here, or paddles depending on time", 15, 286);
    text("working on it next", 15, 311);
    startBtn.draw();
    fill(255, 0, 0);
    customBtn.draw();
    drawAirHockey(0,0,91);
};

var gameScreen = function ()
{
background(30, 0, 255);

//scoreboard
strokeWeight(3);
stroke(191, 0, 0);
fill(240, 240, 240);
rect(-9, 150, 110, 300, 15);
fill(255, 255, 255);
strokeWeight(1);
rect(8, 168, 80, 72);
line(8, 200, 88, 200);
rect(8, 362, 80, 72);
line(8, 400, 88, 400);
fill(0, 0, 0);
textSize(25);
text("AWAY", 13, 170);
text("HOME", 10, 405);
textSize(35);
text(aiScore, 40, 200);
text(playerScore, 40, 360);



//rink perimeter
stroke(191, 0, 0);
fill(240, 240, 240);
strokeWeight(5);
rect(150, 50, 300, 500, 30);

//nets
stroke(156, 204, 255);
fill(156, 204, 255);
strokeWeight(3);
arc(300, 48, 90, 60, 0, 180);
arc(300, 553, 90, 60, -180, 0);

//center rink details
stroke(156, 204, 255);
fill(156, 204, 255);
ellipse(300, 300, 20, 20); //center ice
noFill();
stroke(191, 0, 0);
ellipse(300, 300, 100, 100); //center circle
//dashed center line
var lineX = 0;
for (var i = 0; i < 4; i++) {
    rect(150 + lineX, 300, 15, 0);
    rect(350 + lineX, 300, 15, 0);
    lineX += 28;
}

stroke(156, 204, 255);
line(153, 150, 446, 150); //top blue line
line(153, 450, 446, 450); //bottom blue line

//Paddles
playerPaddle.draw();
playerPaddle.playerMove();
playerPaddle.collision();
AIPaddle.draw();
AIPaddle.AIMove();
AIPaddle.collision();

//Puck
puck.draw();
puck.move();
puck.goal();
fill(255, 0, 0);
text(mouseX + ", " + mouseY, 5, 550);
text(puck.x + ", " + puck.y, 451, 550);
};

var customScreen = function ()
{
    background(0, 0, 0);
    fill(255, 255, 255);
    text("CUSTOMIZATION", 223,44);
    redBtn.draw();
    greenBtn.draw();
    blueBtn.draw();
    customHomeBtn.draw();
    playerPaddle.draw();
    image(getImage("avatars/robot_male_3"),456,472);
     for(var i = 0; i < 600; i+=83)
     {
          image(getImage("space/star"),i,80);
     }
    image(getImage("creatures/Hopper-Cool"),6,487);
};

 mouseClicked = function() {
    if (currentScene === 0 || currentScene === 2)
    {
     startBtn.handleMouseClick();
     customBtn.handleMouseClick();
     redBtn.handleMouseClick();
     greenBtn.handleMouseClick();
     blueBtn.handleMouseClick();
     customHomeBtn.handleMouseClick();
    }
};

draw = function() {
        if (currentScene === 0)
        {splashScreen();}
        else if (currentScene === 1)
        {gameScreen();}
        else if (currentScene === 2)
        {customScreen();}

};
